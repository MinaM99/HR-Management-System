services:
  # MySQL Database Service
  mysql-db:
    image: mysql:8.0
    container_name: hrms-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: hr_management_db
      MYSQL_USER: hrms_user
      MYSQL_PASSWORD: hrms_password
    ports:
      - "3307:3306"  # Using 3307 to avoid conflicts with local MySQL
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - hrms-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s

  # Spring Boot Application Service
  hrms-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hrms-application
    restart: unless-stopped
    depends_on:
      mysql-db:
        condition: service_healthy
    environment:
      # Database Configuration
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/hr_management_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root123
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      
      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect
      
      # Server Configuration
      SERVER_PORT: 8080
      
      # Java Options
      JAVA_OPTS: "-Xms512m -Xmx1024m"
    ports:
      - "8080:8080"
    volumes:
      - app_logs:/app/logs
    networks:
      - hrms-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 120s

# Named volumes for data persistence
volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local

# Custom network for service communication
networks:
  hrms-network:
    driver: bridge